import { useEffect, useState } from "react";
import firebase from "./FirebaseConection";
import "./style.css"

function App() {
  const [titulo, setTitulo] = useState("")
  const [autor, setAutor] = useState("")
  const [posts, setPosts] = useState([])
  const [id, setId] = useState("")

  const [email, setEmail] = useState('')
  const [senha, setSenha] = useState('')

  useEffect(()=>{
    async function loadPosts(){

      await firebase.firestore().collection('posts')
      .onSnapshot((doc)=>{

        let myPosts = []

        doc.forEach((item)=>{
          myPosts.push({
            id: item.id,
            autor: item.data().autor,
            titulo: item.data().titulo
          })
        })
        setPosts(myPosts)
      })
    }

    loadPosts();
  }, [])

  async function cadastraUser(){
    await firebase.auth().createUserWithEmailAndPassword(email, senha)
    .then(()=>{
      console.log("user cadastrado!")
    })
    .catch((error)=>{
      console.log("error", error)
    })
  }



  async function exclui(teste){
    await firebase.firestore().collection('posts')
    .doc(teste)
    .delete()
   
  }

  async function alteraPost(){
    await firebase.firestore().collection('posts')
    .doc(id)
    .update({
      id: id,
      autor: autor,
      titulo: titulo
    })
    .then(()=>{
      console.log('dados alterados!!!')
      setAutor('')
      setTitulo('')
      setId('')
    })
    .catch((error)=>{
      console.log("error: ", error)
    })
   
  }
  async function handleAdd(){
    await firebase.firestore().collection('posts')
    .add({
      autor: autor,
      titulo: titulo
    })
    .then(() =>{
      console.log('dados cadastrados!!!')
      setAutor('')
      setTitulo('')
    })
    .catch((error) => {
      console.log("error:",error)
    })
  }

  async function buscaPost(){
    // await firebase.firestore().collection('posts')
    // .doc('123')
    // .get()
    // .then((snapshot) => {
    //   setAutor(snapshot.data().autor)
    //   setTitulo(snapshot.data().titulo)
    // })
    // .catch((error)=> {
    //   console.log("deu esse erro: ", error)
    // })
    await firebase.firestore().collection('posts')
    .get()
    .then((snapshot)=>{
      let lista = [];

      snapshot.forEach((doc)=>{
        lista.push({
          id: doc.id,
          titulo: doc.data().titulo,
          autor: doc.data().autor
        })
      })
      setPosts(lista)
    })
    .catch((error)=>{
      console.log(error)
    })
    
  }


  return (
    <div className="App">
      <h1> React+Firebase</h1>
      <br/>
         
          <div className="container">
              
            <label>E-mail</label>
            <input type="text" value={email} onChange={(e)=> setEmail(e.target.value)} />
            
              
            <label>Senha</label>
            <input type="password" value={senha} onChange={(e)=> setSenha(e.target.value)} />
            
            <button onClick={cadastraUser}>Cadastrar</button>

          </div>
    <hr/>




          <div className="container">
              
            <label>id que voce quer atualizar</label>
            <textarea type="text" value={id} onChange={(e)=> setId(e.target.value)} />
            
            <label>id que voce quer atualizar</label>
            <textarea type="text" value={id} onChange={(e)=> setId(e.target.value)} />
            

            <label>Titulo</label>
            <textarea type="text" value={titulo} onChange={(e)=> setTitulo(e.target.value)} />
            
            <label>Autor</label>
            <textarea type="text" value={autor} onChange={(e)=> setAutor(e.target.value)} />
            
            <button onClick={handleAdd}>Cadastrar</button>
            <button onClick={buscaPost}>Buscar</button>
            <button onClick={alteraPost}>Editar</button>
            <ul>
              {posts.map((item)=>{
                return(
                  <li key={item.id}> 
                    <span>ID: {item.id}</span> <br/>
                    <span>Titulo: {item.titulo}</span> <br/>
                    <span>Autor: {item.autor}</span>
                    <button onClick={() => exclui(item.id)}>Excluir</button>
                  </li>
                )
              })}
            </ul>
          </div>
      </div>

  );
}

export default App;
